import { CoreTypes, ProposalTypes } from '@walletconnect/types';

import { CHAIN_ID } from './env';

export enum ChiaMethod {
	LogIn = 'chia_logIn',
	GetWallets = 'chia_getWallets',
	PushTx = 'chia_pushTx',
	GetTransaction = 'chia_getTransaction',
	GetWalletBalance = 'chia_getWalletBalance',
	GetCurrentAddress = 'chia_getCurrentAddress',
	SendTransaction = 'chia_sendTransaction',
	SignMessageById = 'chia_signMessageById',
	SignMessageByAddress = 'chia_signMessageByAddress',
	VerifySignature = 'chia_verifySignature',
	GetNextAddress = 'chia_getNextAddress',
	GetSyncStatus = 'chia_getSyncStatus',
	GetAllOffers = 'chia_getAllOffers',
	GetOffersCount = 'chia_getOffersCount',
	CreateOfferForIds = 'chia_createOfferForIds',
	CancelOffer = 'chia_cancelOffer',
	CheckOfferValidity = 'chia_checkOfferValidity',
	TakeOffer = 'chia_takeOffer',
	GetOfferSummary = 'chia_getOfferSummary',
	GetOfferData = 'chia_getOfferData',
	GetOfferRecord = 'chia_getOfferRecord',
	GetCatWalletInfo = 'chia_getCATWalletInfo',
	GetCatAssetId = 'chia_getCATAssetId',
	SpendCat = 'chia_spendCAT',
	AddCatToken = 'chia_addCATToken',
	GetNfts = 'chia_getNFTs',
	GetNftInfo = 'chia_getNFTInfo',
	MintBulk = 'chia_mintBulk',
	MintNft = 'chia_mintNFT',
	TransferNft = 'chia_transferNFT',
	GetNftsCount = 'chia_getNFTsCount',
	AddMirror = 'chia_addMirror',
	AddMissingFiles = 'chia_addMissingFiles',
	BatchUpdate = 'chia_batchUpdate',
	CancelDataLayerOffer = 'chia_cancelDataLayerOffer',
	CheckPlugins = 'chia_checkPlugins',
	ClearPendingRoots = 'chia_clearPendingRoots',
	CreateDataStore = 'chia_createDataStore',
	DeleteKey = 'chia_deleteKey',
	DeleteMirror = 'chia_deleteMirror',
	GetAncestors = 'chia_getAncestors',
	GetKeys = 'chia_getKeys',
	GetKeysValues = 'chia_getKeysValues',
	GetKvDiff = 'chia_getKvDiff',
	GetLocalRoot = 'chia_getLocalRoot',
	GetMirrors = 'chia_getMirrors',
	GetOwnedStores = 'chia_getOwnedStores',
	GetRoot = 'chia_getRoot',
	GetRoots = 'chia_getRoots',
	GetRootHistory = 'chia_getRootHistory',
	GetDataLayerSyncStatus = 'chia_getDataLayerSyncStatus',
	GetValue = 'chia_getValue',
	Insert = 'chia_insert',
	MakeDataLayerOffer = 'chia_makeDataLayerOffer',
	RemoveSubscriptions = 'chia_removeSubscriptions',
	RequestPermissions = 'chia_requestPermissions',
	Subscribe = 'chia_subscribe',
	Subscriptions = 'chia_subscriptions',
	TakeDataLayerOffer = 'chia_takeDataLayerOffer',
	Unsubscribe = 'chia_unsubscribe',
	VerifyOffer = 'chia_verifyOffer',
	CreateNewDIDWallet = 'chia_createNewDIDWallet',
	// DIDCreateAttest = 'chia_createAttest',
	// DIDCreateBackupFile = 'chia_createBackupFile',
	FindLostDID = 'chia_findLostDID',
	GetDIDCurrentCoinInfo = 'chia_getDIDCurrentCoinInfo',
	GetDID = 'chia_getDID',
	GetDIDInfo = 'chia_getDIDInfo',
	GetDIDInformationNeededForRecovery = 'chia_getDIDInformationNeededForRecovery',
	GetDIDMetadata = 'chia_getDIDMetadata',
	GetDIDPubkey = 'chia_getDIDPubkey',
	GetDIDRecoveryList = 'chia_getDIDRecoveryList',
	GetDIDName = 'chia_getDIDName',
	// MessageSpend = 'chia_messageSpend',
	// RecoverySpend = 'chia_recoverySpend',
	TransferDID = 'chia_transferDID',
	UpdateDIDMetadata = 'chia_updateDIDMetadata',
	UpdateDIDRecoveryIds = 'chia_updateDIDRecoveryIds',
	SetDIDName = 'chia_setDIDName',
	SetNftDID = 'chia_setNFTDID',
	GetNftWalletsWithDIDs = 'chia_getNFTWalletsWithDIDs',
}

export const REQUIRED_NAMESPACES: ProposalTypes.RequiredNamespaces = {
	chia: {
		methods: Object.values(ChiaMethod),
		chains: [CHAIN_ID],
		events: [],
	},
};

export const METADATA: CoreTypes.Metadata = {
	name: 'Slime Network',
	description: 'Connection to Slime Network',
	url: '#',
	icons: ['https://avatars.githubusercontent.com/u/125329549?s=200&v=4'],
};
